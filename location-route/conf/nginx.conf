events {}

http {

    # This is all types that tell to nginx the types 
    # If you introduce a types context in the configuration, NGINX becomes even dumber and only parses the files configured by you. 
    include /etc/nginx/mime.types;

    server {
        listen 8080;
        # name of server, in local we set to localhost
        server_name localhost; 
        # Nginx load the index.html file auto in the folder static
        # but we should add it in dockerfile
        root /usr/share/nginx/static/;

        # variable, it check name as query
        set $name $arg_name;
        set $age $arg_age;

        # /list or /list-users 
        # http://localhost:8080/list/sdfdsf
        # http://localhost:8080/list
        # http://localhost:8080/list?name=%22Scd%22
        location /list {
            return 200 "This is list page, all kind of list pages";
        }

        # just load for /users path nothing more
        # NGINX to respond only if the URL matches exactly. 
        location = /users {
            return 200 "1.Mohammad Taheri.\n2.Hossein Hassani.\n";
        }

        # http://localhost:8080/users/sdc/dsc
        # http://localhost:8080/users/?name=Mohammad&age=25 => Name - Mohammad with age: 25
        location ^~ /users {
            return 200 "Name - $name with age: $age\n";
        }


        location ^~ /admins {
            # http://localhost:8080/admins?name=mohammad&age=25
            if ($is_args) {
                set $admin $arg_name;
                set $ageAdmin $arg_age;
                return 200 "Admin is - $admin with age: $ageAdmin\n";
            }
            return 200 "This is admin url";            
        }       

        # when we use ~ it means it will check regex match 
        # so we can load blog1, blog2 and etc
        # the regex is case seneitive, if you want to make it disable you can use * after ~
        location ~* /blog[0-9] {
            try_files /index.html =404;
        }

        # preferential prefix match
        location ^~ /test8 {
            return 200 'Prefix matched.\n';
        }   

    }
}