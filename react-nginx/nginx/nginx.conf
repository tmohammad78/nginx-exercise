# user www-data;
# error_log   logs/error.log warn;
worker_processes auto;

events {
    worker_connections 1024;
}

http {

    server {
        listen 80;
        root  /usr/share/nginx/html;
        include /etc/nginx/mime.types;

        # enable gzip
        gzip on; 
        # Disable gzip for browsers that do not support it — this will disable gzip for IE4–6
        gzip_disable "msie6"; 
        #  Let the browser decide whether it will accept gzip.
        gzip_vary on; 
        # enables compression for all proxied requests.
        gzip_proxied any; 
        # This setting will set the compression level for gzip , Cranking it up will increase the work for your server 
        gzip_comp_level 6; 
        # Sets the number and size of buffers used to compress a response
        gzip_buffers 16 8k; 
        # Sets the minimum HTTP version of a request required to compress a response
        gzip_http_version 1.1; 
        gzip_types text/plain application/javascript text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
        
        # For service worker
        location ~* (/service-worker\.js)$ {
            add_header Cache-Control public;
            # no-store no-cache must-revalidate proxy-revalidate max-age=0
            # expires 0;
            # The off parameter disables adding or modifying the “Expires” and “Cache-Control” response header fields.
            gzip on;
            gzip_http_version 1.0;
        }

        location ~* \.(css|js|map|html|txt)$ {
            add_header Cache-Control public;            
            add_header Pragma public; 
            access_log off;
            try_files $uri =404;
            add_header Vary Accept-Encoding;
            expires 1M;
        }

        location ~* \.(eot|ttf|otf|woff|woff2)$ {
            access_log off;
            try_files $uri =404;    
            expires 20d;
            add_header Cache-Control public;  
        }

        location = / {
            try_files $uri $uri/ /index.html;
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /500.html;
        location = /50x.html {
            internal;
        }
    }
}